plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'org.museautomation'
version '0.22'

application {
    mainClassName = 'org.museautomation.ui.ide.IdeApplication'
    applicationName = 'museide'
    applicationDefaultJvmArgs =  [
        "--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
        "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED",
        "--add-opens=javafx.graphics/com.sun.javafx.text=ALL-UNNAMED",
        "--add-opens=javafx.graphics/javafx.scene.text=ALL-UNNAMED",
    ]
}

javafx {
    version = "12.0.2"
    modules = [ 'javafx.controls' ]
}

repositories
    {
    mavenLocal()
    jcenter()
    maven { url "https://mvnrepository.com/artifact/com.github.alexbodogit/AnchorFX/master" }
    }

dependencies
    {
    implementation 'org.museautomation:muse-core:[0.22,)'
    implementation 'org.museautomation:muse-selenium:[0.22,)'
    implementation 'org.museautomation:muse-seleniumide:[0.22,)'
    implementation 'org.museautomation:muse-commandline:[0.22,)'
    implementation 'org.museautomation:muse-extensions:[0.7,)'

    implementation 'org.museautomation:ide-extend:[0.7,)'
    implementation 'org.museautomation:ide-step-test-editor:[0.7,)'
    implementation 'org.museautomation:ide-editors:[0.7,)'
    implementation 'org.museautomation:ide-valuesource:[0.9,)'
    implementation 'net.christophermerrill:FancyFxTree:[3.5,)'
    implementation 'net.christophermerrill:ShadowboxFx:[1.3,)'

    implementation 'org.openjfx:javafx-controls:12.0.2'
    implementation 'org.controlsfx:controlsfx:11.0.0'
    implementation files('lib/openjfx-dialogs-1.0.3.jar')

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.6'

    // keep these in sync with muse-core!!
    implementation 'ch.qos.logback:logback-classic:1.1.9'
    implementation 'ch.qos.logback:logback-core:1.1.9'

    testImplementation 'net.christophermerrill:TestFxUtils:[1.5,)'
    testImplementation 'org.mockito:mockito-core:2.7.9'
    //testImplementation 'org.testfx:openjfx-monocle:jdk-9+181'

    implementation('com.google.guava:guava') { version { strictly '25.0-jre'} }
    implementation('com.google.code.findbugs:annotations')  { version { strictly '3.0.1'} }

    }

jar {
    manifest {
        attributes 'Implementation-Title': 'MuseIDE',
                   'Implementation-Version': version
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
    }

javadoc {
    options.addBooleanOption('html5', true)
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
    }

artifacts
    {
    archives sourcesJar
    archives javadocJar
    }

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

task installDeps {
	dependsOn gradle.includedBuilds*.task(':publishToMavenLocal')
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

wrapper {
    gradleVersion = '6.0.1'
}
